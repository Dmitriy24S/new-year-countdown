{"version":3,"sources":["App.js","index.js"],"names":["App","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","currentYear","Date","getFullYear","diff","useEffect","intervalID","setInterval","d","Math","floor","h","m","s","countDown","clearInterval","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA2DeA,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,GAAc,IAAIC,MAAOC,cAIzBC,EAFc,IAAIF,KAAJ,qBAAuBD,EAAc,EAArC,cACA,IAAIC,KAuBxB,OATAG,qBAAU,WACR,IAAIC,EAAaC,aAAY,YAZb,WAChB,IAAMC,EAAIC,KAAKC,MAAMN,EAAO,IAAO,GAAK,GAAK,IACvCO,EAAIF,KAAKC,MAAMN,EAAO,IAAO,GAAK,IAAM,GACxCQ,EAAIH,KAAKC,MAAMN,EAAO,IAAO,IAAM,GACnCS,EAAIJ,KAAKC,MAAMN,EAAO,KAAQ,GACpCV,EAAQc,GACRZ,EAASe,GACTb,EAAWc,GACXZ,EAAWa,GAKTC,KACC,KACH,OAAO,WACLC,cAAcT,MAEf,CAACP,IAGF,sBAAKiB,UAAU,MAAf,UACE,oDACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,6BAAKvB,IACL,4CAEF,sBAAKuB,UAAU,OAAf,UACE,6BAAKrB,IACL,4CAEF,sBAAKqB,UAAU,OAAf,UACE,6BAAKnB,IACL,4CAEF,sBAAKmB,UAAU,OAAf,UACE,6BAAKjB,IACL,mDC/CVkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4a3f01b7.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  const currentYear = new Date().getFullYear();\n\n  const newYearTime = new Date(`January 01 ${currentYear + 1} 00:00:00`);\n  const currentTime = new Date();\n  const diff = newYearTime - currentTime;\n\n  const countDown = () => {\n    const d = Math.floor(diff / 1000 / 60 / 60 / 24);\n    const h = Math.floor(diff / 1000 / 60 / 60) % 24;\n    const m = Math.floor(diff / 1000 / 60) % 60;\n    const s = Math.floor(diff / 1000) % 60;\n    setDays(d);\n    setHours(h);\n    setMinutes(m);\n    setSeconds(s);\n  };\n\n  useEffect(() => {\n    let intervalID = setInterval(() => {\n      countDown();\n    }, 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, [seconds]);\n\n  return (\n    <div className=\"App\">\n      <h1>New Year Countdown</h1>\n      <div className=\"countdown\">\n        <div className=\"time\">\n          <h2>{days}</h2>\n          <small>days</small>\n        </div>\n        <div className=\"time\">\n          <h2>{hours}</h2>\n          <small>days</small>\n        </div>\n        <div className=\"time\">\n          <h2>{minutes}</h2>\n          <small>days</small>\n        </div>\n        <div className=\"time\">\n          <h2>{seconds}</h2>\n          <small>days</small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}