{"version":3,"sources":["App.js","index.js"],"names":["App","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","isLoading","setIsLoading","currentYear","Date","getFullYear","diff","useEffect","intervalId","setInterval","d","Math","floor","h","m","s","countDown","clearInterval","counter","className","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAmEeA,MAjEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEMC,GAAc,IAAIC,MAAOC,cAGzBC,EAFc,IAAIF,KAAJ,qBAAuBD,EAAc,EAArC,cACA,IAAIC,KAexBG,qBAAU,WACR,IAAIC,EAAaC,aAAY,YAbb,WAChB,IAAMC,EAAIC,KAAKC,MAAMN,EAAO,IAAO,GAAK,GAAK,IACvCO,EAAIF,KAAKC,MAAMN,EAAO,IAAO,GAAK,IAAM,GACxCQ,EAAIH,KAAKC,MAAMN,EAAO,IAAO,IAAM,GACnCS,EAAIJ,KAAKC,MAAMN,EAAO,KAAQ,GACpCZ,EAAQgB,GACRd,EAASiB,GACTf,EAAWgB,GACXd,EAAWe,GACXb,GAAa,GAKXc,KACC,KACH,OAAO,WACLC,cAAcT,MAEf,CAACT,IAEJ,IAAMmB,EACJ,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,6BAAK1B,IACL,4CAEF,sBAAK0B,UAAU,OAAf,UACE,6BAAKxB,EAAQ,GAAK,IAAMA,EAAQA,IAChC,6CAEF,sBAAKwB,UAAU,OAAf,UACE,6BAAKtB,EAAU,GAAK,IAAMA,EAAUA,IACpC,+CAEF,sBAAKsB,UAAU,OAAf,UACE,6BAAKpB,EAAU,GAAK,IAAMA,EAAUA,IACpC,kDAKAqB,EAAS,qBAAKD,UAAU,WAE9B,OACE,sBAAKA,UAAU,MAAf,UACE,oDACClB,EAAYmB,EAASF,EACtB,qBAAKC,UAAU,OAAf,SAAuBhB,EAAc,QCzD3CkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5ed85a13.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [days, setDays] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const newYearTime = new Date(`January 01 ${currentYear + 1} 00:00:00`);\r\n  const currentTime = new Date();\r\n  const diff = newYearTime - currentTime;\r\n\r\n  const countDown = () => {\r\n    const d = Math.floor(diff / 1000 / 60 / 60 / 24);\r\n    const h = Math.floor(diff / 1000 / 60 / 60) % 24;\r\n    const m = Math.floor(diff / 1000 / 60) % 60;\r\n    const s = Math.floor(diff / 1000) % 60;\r\n    setDays(d);\r\n    setHours(h);\r\n    setMinutes(m);\r\n    setSeconds(s);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervalId = setInterval(() => {\r\n      countDown();\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [seconds]);\r\n\r\n  const counter = (\r\n    <div className=\"countdown\">\r\n      <div className=\"time\">\r\n        <h2>{days}</h2>\r\n        <small>days</small>\r\n      </div>\r\n      <div className=\"time\">\r\n        <h2>{hours < 10 ? \"0\" + hours : hours}</h2>\r\n        <small>hours</small>\r\n      </div>\r\n      <div className=\"time\">\r\n        <h2>{minutes < 10 ? \"0\" + minutes : minutes}</h2>\r\n        <small>minutes</small>\r\n      </div>\r\n      <div className=\"time\">\r\n        <h2>{seconds < 10 ? \"0\" + seconds : seconds}</h2>\r\n        <small>seconds</small>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const loader = <div className=\"loader\"></div>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>New Year Countdown</h1>\r\n      {isLoading ? loader : counter}\r\n      <div className=\"year\">{currentYear + 1}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}